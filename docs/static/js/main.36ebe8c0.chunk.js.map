{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACQO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhBrBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,YAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACC,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEO2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCXrB6B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.36ebe8c0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            //console.log('Submit hecho')\r\n            setcategories(cats => [inputValue, ...cats ]); \r\n            setinputValue('');\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />    \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=hW8Rkt3pM65rPvq5dk6oMPnLGGVV8ISs`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__bounce'>{category}</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }    \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n                \r\n            })\r\n    }, [category]) \r\n\r\n    return state; // {data:[], loading: true};\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n \r\n    const [categories, setcategories] = useState(['Pokemon']);\r\n\r\n    return (\r\n     <>\r\n     <h2>GitExpertApp</h2>\r\n     <AddCategory setcategories={setcategories}/>\r\n     <hr />\r\n\r\n\r\n     <ol>\r\n        {\r\n            categories.map( category => (\r\n                <GifGrid \r\n                key={category}\r\n                category={category}\r\n                />\r\n            ))\r\n        }\r\n     </ol>\r\n\r\n     </>\r\n );\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n  <GitExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}